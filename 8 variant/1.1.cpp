/*
–ó–∞–¥–∞–Ω–∏–µ 1. –° –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤–≤–æ–¥—è—Ç—Å—è –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞ x –∏ y. –í—ã–≤–µ—Å—Ç–∏ –Ω–∞ 
—ç–∫—Ä–∞–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã—á–∏—Å–ª–µ–Ω–∏—è: |ùë•| ‚àí |ùë¶| ‚àó (1 + |ùë•ùë¶|).
*/

#include <iostream>
#include <cmath>

double readNumber(const std::string& prompt) 
{
    double number;
    bool validInput = false;

    do 
    {
        std::cout << prompt;
        if (!(std::cin >> number)) 
        {
            std::cout << "–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ." << std::endl;
            std::cin.clear();
            std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
        } 
        else 
        {
            validInput = true;
        }
    } 
    while (!validInput);

    return number;
}

int main() 
{
    double x = readNumber("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ x: ");
    double y = readNumber("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ y: ");

    double result = std::abs(x) - std::abs(y) * (1 + std::abs(x * y));

    std::cout << "–†–µ–∑—É–ª—å—Ç–∞—Ç: " << result << std::endl;

    return 0;
}