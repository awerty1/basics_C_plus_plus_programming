/*
–ó–∞–¥–∞–Ω–∏–µ 3. –ù–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–Ω–∞–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã. 
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –≤–æ–ø—Ä–æ—Å –∏ —Ç—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω 
–≤—ã–±—Ä–∞—Ç—å –æ—Ç–≤–µ—Ç –∏ –≤–≤–µ—Å—Ç–∏ –µ–≥–æ –Ω–æ–º–µ—Ä. –í —Å–ª—É—á–∞–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —ç–∫—Ä–∞–Ω–µ 
–ø–æ—è–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ ¬´–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ¬ª, –≤ —Å–ª—É—á–∞–µ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∏—Ç—Å—è
–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.
*/

#include <iostream>
#include <limits>

void askQuestion(const std::string& question, const std::string& option1, 
                const std::string& option2, const std::string& option3, int correctAnswer) 
{
    std::cout << question << std::endl;
    std::cout << "1. " << option1 << std::endl;
    std::cout << "2. " << option2 << std::endl;
    std::cout << "3. " << option3 << std::endl;

    int userAnswer;
    std::cout << "\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞: ";
    while (!(std::cin >> userAnswer) || userAnswer < 1 || userAnswer > 3) 
    {
        std::cout << "–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞. –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞: ";
        std::cin.clear();
        std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
    }

    if (userAnswer == correctAnswer) 
    {
        std::cout << "–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ! üòÑ" << std::endl;
    } 
    else 
    {
        std::cout << "–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: " << correctAnswer << " üòï" << std::endl;
    }
}

int main() 
{
    // –ó–∞–¥–∞–µ–º –≤–æ–ø—Ä–æ—Å ‚Ññ1
    std::string question1 = "–ö—Ç–æ —è–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–æ–º –≠–π—Ñ–µ–ª–µ–≤–æ–π –±–∞—à–Ω–∏?";
    std::string option1_1 = "–ê–Ω—Ç–æ–Ω–∏–æ –ì–∞—É–¥–∏";
    std::string option1_2 = "–ì—é—Å—Ç–∞–≤ –≠–π—Ñ–µ–ª—å";
    std::string option1_3 = "–õ–µ–æ–Ω–∞—Ä–¥–æ –¥–∞ –í–∏–Ω—á–∏";
    int correctAnswer1 = 2;

    askQuestion(question1, option1_1, option1_2, option1_3, correctAnswer1);

    // –ó–∞–¥–∞–µ–º –≤–æ–ø—Ä–æ—Å ‚Ññ2
    std::string question2 = "\n–ö–∞–∫–æ–µ –∑–¥–∞–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è —Å–∏–º–≤–æ–ª–æ–º –°–∏–¥–Ω–µ—è, –ê–≤—Å—Ç—Ä–∞–ª–∏—è?";
    std::string option2_1 = "–õ—É–≤—Ä";
    std::string option2_2 = "–û–ø–µ—Ä–∞ –•–∞—Ä–±–æ—Ä";
    std::string option2_3 = "–ë–æ–ª—å—à–æ–π –∫–∞–Ω—å–æ–Ω";
    int correctAnswer2 = 2;

    askQuestion(question2, option2_1, option2_2, option2_3, correctAnswer2);

    // –ó–∞–¥–∞–µ–º –≤–æ–ø—Ä–æ—Å ‚Ññ3
    std::string question3 = "\n–ö—Ç–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–ª —Ç–µ–æ—Ä–∏—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∏–ª—è –≤ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ?";
    std::string option3_1 = "–õ—é–¥–≤–∏–≥ –ú–∏—Å –≤–∞–Ω –¥–µ—Ä –†–æ—ç";
    std::string option3_2 = "–õ–µ –ö–æ—Ä–±—é–∑—å–µ";
    std::string option3_3 = "–§—Ä–∞–Ω–∫ –õ–ª–æ–π–¥ –†–∞–π—Ç";
    int correctAnswer3 = 2;

    askQuestion(question3, option3_1, option3_2, option3_3, correctAnswer3);

    return 0;
}