/*
Задание 2. Задан массив из n целых чисел, которые нужно ввести с
клавиатуры (число n также вводится с клавиатуры, его значение не больше 20).
Определить, является ли упорядоченной по убыванию часть массива,
включающая элементы с номерами от n1 до n2. n1, n2 вводятся с клавиатуры.
Программа должна вывести «да» или «нет». Сделать проверку на корректность
ввода n, n1, n2.
*/

#include <iostream>
#include <vector>
#include <limits> // Для очистки ввода в случае ошибок

int main() 
{
    int n, n1, n2;
    
    // Ввод размера массива с защитой от ввода символов
    do 
    {
        std::cout << "Введите размер массива (n не больше 20): ";
        std::cin >> n;
        if (std::cin.fail() || n <= 0 || n > 20) 
        {
            std::cout << "Пожалуйста, введите целое число в диапазоне от 1 до 20.\n";
            std::cin.clear(); // Сброс флага ошибки ввода
            std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n'); // Очистка ввода
        }
    } 
    while (n <= 0 || n > 20);

    std::vector<int> arr(n);

    // Ввод элементов массива с защитой от ввода символов
    std::cout << "Введите " << n << " целых чисел для массива: " << std::endl;
    for (int i = 0; i < n; ++i) 
    {
        std::cout << "Введите ARR[" << i+1 << "]:"; 
        std::cin >> arr[i];
        if (std::cin.fail()) 
        {
            std::cout << "Пожалуйста, введите целое число.\n";
            std::cin.clear(); // Сброс флага ошибки ввода
            std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n'); // Очистка ввода
            i--; // Повторяем ввод для текущего элемента
        }
    }

    // Ввод диапазона n1 с защитой от ввода символов
    do 
    {
        std::cout << "Введите n1 (должно быть в диапазоне от 1 до " << n << "): ";
        std::cin >> n1;
        n1 -= 1;
        if (std::cin.fail() || n1 < 0 || n1 >= n) 
        {
            std::cout << "Пожалуйста, введите целое число в допустимом диапазоне.\n";
            std::cin.clear(); // Сброс флага ошибки ввода
            std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n'); // Очистка ввода
        }
    } while (n1 < 0 || n1 >= n);

    // Ввод диапазона n2 с защитой от ввода символов
    do 
    {
        std::cout << "Введите n2 (должно быть в диапазоне от 1 до " << n << "): ";
        std::cin >> n2;
        n2 -= 1;
        if (std::cin.fail() || n2 < 0 || n2 >= n || n2 < n1) 
        {
            std::cout << "Пожалуйста, введите целое число в допустимом диапазоне.\n";
            std::cin.clear(); // Сброс флага ошибки ввода
            std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n'); // Очистка ввода
        }
    } 
    while (n2 < 0 || n2 >= n || n2 < n1);

    // Проверка является ли часть массива упорядоченной по убыванию
    bool isDescending = true;
    for (int i = n1 + 1; i <= n2; ++i) 
    {
        if (arr[i] > arr[i - 1]) 
        {
            isDescending = false;
            break;
        }
    }

    if (isDescending) 
    {
        std::cout << "Да, упорядоченная часть массива по убыванию." << std::endl;
    } 
    else 
    {
        std::cout << "Нет, не упорядоченная часть массива по убыванию." << std::endl;
    }

    return 0;
}
