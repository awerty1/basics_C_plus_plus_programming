/*
Задание 1.Сформировать и вывести на экран квадратную матрицу из n строк 
и столбцов. Элементы матрицы формируются по такой закономерности: все 
окаймляющие элементы должны быть нулевыми, а все остальные элементы –
случайными числами в диапазоне от 1 до 9. Например, при n = 4 может быть 
выведена такая матрица (внутри случайные числа):
0 0 0 0
0 9 2 0
0 3 7 0
0 0 0 0
*/

#include <iostream>
#include <random>
#include <iomanip>


int main() 
{
    int n;
    
    std::cout << "Введите размерность матрицы: ";
    std::cin >> n;
    
    // Создаем двумерный массив размером n x n
    int** matrix = new int*[n];
    for (int i = 0; i < n; i++) 
    {
        matrix[i] = new int[n];
    }
    
    // Заполняем матрицу случайными числами
    std::random_device rd; // Инициализируем генератор случайных чисел
    std::mt19937 gen(rd());
    std::uniform_int_distribution<int> dist(1, 9); // Генерируем случайные числа от 1 до 9
    
    for (int i = 0; i < n; i++) 
    {
        for (int j = 0; j < n; j++) 
        {
            // Проверяем, является ли элемент окаймляющим
            if (i == 0 || j == 0 || i == n - 1 || j == n - 1) 
            {
                matrix[i][j] = 0;
            } 
            else 
            {
                // Генерируем случайное число от 1 до 9
                matrix[i][j] = dist(gen);
            }
        }
    }
    
    // Выводим матрицу на экран
    for (int i = 0; i < n; i++) 
    {
        for (int j = 0; j < n; j++) 
        {
            std::cout << std::setw(2) << matrix[i][j];
        }
        std::cout << std::endl;
    }
    
    // Освобождаем память
    for (int i = 0; i < n; i++) 
    {
        delete[] matrix[i];
    }
    delete[] matrix;
    
    return 0;
}