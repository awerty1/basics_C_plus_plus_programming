/*
Задание 4. Сформировать и вывести матрицу из n строк и m столбцов.
Элементы матрицы должны быть случайными числами в диапазоне от -50 до 50. 
Отсортировать все столбцы с нечетными номерами по возрастанию (нумерация 
строк ведется со стороны пользователя, т.е. с единицы). Вывести 
преобразованную таким образом матрицу.
*/

// Переменные:
// int n | Целый тип | размер для строк в матрице
// int m | Целый тип | размер для столбцов в матрице
// int matrix[n][m] | Целый тип | Срздание матрицы размера n x m 
// int i | Целый типа | Счетчик цикла
// int j | Целый типа | Счетчик цикла
// int k | Целый типа | Счетчик цикла

#include <iostream>
#include <cstdlib>
#include <ctime>

using namespace std;

int main()
{
    int n, m;
    cout << "Введите количество строк матрицы: ";
    cin >> n;
    cout << "Введите количество столбцов матрицы: ";
    cin >> m;
     
    int matrix[n][m];
    srand(time(0)); // инициализируем генератор случайных чисел
    
    // Заполнение матрицы случайными числами
    for (int i = 0; i < n; i++) 
    {
        for (int j = 0; j < m; j++) 
        {
            matrix[i][j] = rand() % 101 - 50; // случайное число от -10 до 10
            cout << matrix[i][j] << "\t"; // вывод на экран
        }
        cout << endl;
    }

    // сортировка обменом(bable sort)
    // сортируем нечетные столбцы
    for (int j = 0; j < m; j += 2) 
    {
        for (int i = 0; i < n - 1; i++) 
        {
            for (int k = i + 1; k < n; k++) 
            {
                if (matrix[i][j] > matrix[k][j]) 
                {
                    int temp = matrix[i][j];
                    matrix[i][j] = matrix[k][j];
                    matrix[k][j] = temp;
                }
            }
        }
    }
    

    
    // Вывод преобразованной матрицы
    cout << "Преобразованная матрица после сортировки нечетных столбцов:" << endl;
    for (int i = 0; i < n; i++) 
    {
        for (int j = 0; j < m; j++) 
        {
            cout << matrix[i][j] << "\t";
        }
        cout << endl;
    }
    
    return 0;
}